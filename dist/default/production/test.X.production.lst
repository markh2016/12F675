

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 12 02:25:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x5E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 06/12/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC12F675 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000E                     	;# 
    58     000E                     	;# 
    59     000F                     	;# 
    60     0010                     	;# 
    61     0019                     	;# 
    62     001E                     	;# 
    63     001F                     	;# 
    64     0081                     	;# 
    65     0085                     	;# 
    66     008C                     	;# 
    67     008E                     	;# 
    68     0090                     	;# 
    69     0095                     	;# 
    70     0096                     	;# 
    71     0096                     	;# 
    72     0099                     	;# 
    73     009A                     	;# 
    74     009A                     	;# 
    75     009B                     	;# 
    76     009C                     	;# 
    77     009D                     	;# 
    78     009E                     	;# 
    79     009F                     	;# 
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0019                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     008C                     	;# 
    99     008E                     	;# 
   100     0090                     	;# 
   101     0095                     	;# 
   102     0096                     	;# 
   103     0096                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     0019                     _CMCON	set	25
   113     0005                     _GPIO	set	5
   114     0005                     _GPIObits	set	5
   115     0081                     _OPTION_REG	set	129
   116     0095                     _WPU	set	149
   117     0085                     _TRISIO	set	133
   118     009F                     _ANSEL	set	159
   119                           
   120                           	psect	cinit
   121     03FD                     start_initialization:	
   122                           ; #config settings
   123                           
   124     03FD                     __initialization:
   125     03FD                     end_of_initialization:	
   126                           ;End of C runtime variable initialization code
   127                           
   128     03FD                     __end_of__initialization:
   129     03FD  0183               	clrf	3
   130     03FE  2BD3               	ljmp	_main	;jump to C main() function
   131                           
   132                           	psect	cstackCOMMON
   133     0000                     __pcstackCOMMON:
   134     0000                     ??_InitPic:
   135                           
   136                           	psect	cstackBANK0
   137     0020                     __pcstackBANK0:	
   138                           ; 1 bytes @ 0x0
   139                           
   140     0020                     ?_InitPic:
   141     0020                     ?_main:	
   142                           ; 1 bytes @ 0x0
   143                           
   144     0020                     ??_main:	
   145                           ; 1 bytes @ 0x0
   146                           
   147                           
   148                           ; 1 bytes @ 0x0
   149     0020                     	ds	3
   150                           
   151                           	psect	maintext
   152     03D3                     __pmaintext:	
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 27 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, pclath, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : B00/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMMON   BANK0
   172 ;;      Params:         0       0
   173 ;;      Locals:         0       0
   174 ;;      Temps:          0       3
   175 ;;      Totals:         0       3
   176 ;;Total ram usage:        3 bytes
   177 ;; Hardware stack levels required when called: 1
   178 ;; This function calls:
   179 ;;		_InitPic
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185     03D3                     _main:	
   186                           ;psect for function _main
   187                           
   188     03D3                     l649:	
   189                           ;incstack = 0
   190                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   191                           
   192                           
   193                           ;main.c: 31:     InitPic();
   194     03D3  23C8               	fcall	_InitPic
   195     03D4                     l651:
   196                           
   197                           ;main.c: 38:     _delay((unsigned long)((5000)*(4000000/4000.0))) ;
   198     03D4  301A               	movlw	26
   199     03D5  1283               	bcf	3,5	;RP0=0, select bank0
   200     03D6  00A2               	movwf	??_main+2
   201     03D7  305E               	movlw	94
   202     03D8  00A1               	movwf	??_main+1
   203     03D9  306E               	movlw	110
   204     03DA  00A0               	movwf	??_main
   205     03DB                     u17:
   206     03DB  0BA0               	decfsz	??_main,f
   207     03DC  2BDB               	goto	u17
   208     03DD  0BA1               	decfsz	??_main+1,f
   209     03DE  2BDB               	goto	u17
   210     03DF  0BA2               	decfsz	??_main+2,f
   211     03E0  2BDB               	goto	u17
   212     03E1  0000               	nop
   213     03E2                     l653:
   214                           
   215                           ;main.c: 41:     {;main.c: 44:         GPIObits.GP4^=1;
   216     03E2  1283               	bcf	3,5	;RP0=0, select bank0
   217     03E3  0E05               	swapf	5,w	;volatile
   218     03E4  3901               	andlw	1
   219     03E5  00A0               	movwf	??_main
   220     03E6  3001               	movlw	1
   221     03E7  06A0               	xorwf	??_main,f
   222     03E8  0EA0               	swapf	??_main,f
   223     03E9  0805               	movf	5,w	;volatile
   224     03EA  0620               	xorwf	??_main,w
   225     03EB  39EF               	andlw	-17
   226     03EC  0620               	xorwf	??_main,w
   227     03ED  0085               	movwf	5	;volatile
   228     03EE                     l655:
   229                           
   230                           ;main.c: 45:         _delay((unsigned long)((500)*(4000000/4000.0)));
   231     03EE  3003               	movlw	3
   232     03EF  00A2               	movwf	??_main+2
   233     03F0  308A               	movlw	138
   234     03F1  00A1               	movwf	??_main+1
   235     03F2  3055               	movlw	85
   236     03F3  00A0               	movwf	??_main
   237     03F4                     u27:
   238     03F4  0BA0               	decfsz	??_main,f
   239     03F5  2BF4               	goto	u27
   240     03F6  0BA1               	decfsz	??_main+1,f
   241     03F7  2BF4               	goto	u27
   242     03F8  0BA2               	decfsz	??_main+2,f
   243     03F9  2BF4               	goto	u27
   244     03FA  2BFB               	nop2
   245     03FB  2BE2               	goto	l653
   246     03FC  2800               	ljmp	start
   247     03FD                     __end_of_main:
   248                           
   249                           	psect	text1
   250     03C8                     __ptext1:	
   251 ;; *************** function _InitPic *****************
   252 ;; Defined at:
   253 ;;		line 50 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0
   267 ;;      Params:         0       0
   268 ;;      Locals:         0       0
   269 ;;      Temps:          0       0
   270 ;;      Totals:         0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels used: 1
   273 ;; This function calls:
   274 ;;		Nothing
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280     03C8                     _InitPic:	
   281                           ;psect for function _InitPic
   282                           
   283     03C8                     l639:	
   284                           ;incstack = 0
   285                           ; Regs used in _InitPic: [wreg+status,2]
   286                           
   287                           
   288                           ;main.c: 53:     GPIO = 0x00;
   289     03C8  1283               	bcf	3,5	;RP0=0, select bank0
   290     03C9  0185               	clrf	5	;volatile
   291     03CA                     l641:
   292                           
   293                           ;main.c: 56:     CMCON = 0x07;
   294     03CA  3007               	movlw	7
   295     03CB  0099               	movwf	25	;volatile
   296     03CC                     l643:
   297                           
   298                           ;main.c: 60:     ANSEL = 0x00;
   299     03CC  1683               	bsf	3,5	;RP0=1, select bank1
   300     03CD  019F               	clrf	31	;volatile
   301     03CE                     l645:
   302                           
   303                           ;main.c: 61:     TRISIO = 0x00;
   304     03CE  0185               	clrf	5	;volatile
   305     03CF                     l647:
   306                           
   307                           ;main.c: 62:     WPU = 0;
   308     03CF  0195               	clrf	21	;volatile
   309                           
   310                           ;main.c: 63:     OPTION_REG = 0x80;
   311     03D0  3080               	movlw	128
   312     03D1  0081               	movwf	1	;volatile
   313     03D2                     l29:
   314     03D2  0008               	return
   315     03D3                     __end_of_InitPic:
   316     005E                     btemp	set	94	;btemp
   317     005E                     wtemp0	set	94
   318                           
   319                           	psect	idloc
   320                           
   321                           ;Config register IDLOC0 @ 0x2000
   322                           ;	unspecified, using default values
   323     2000                     	org	8192
   324     2000  3FFF               	dw	16383
   325                           
   326                           ;Config register IDLOC1 @ 0x2001
   327                           ;	unspecified, using default values
   328     2001                     	org	8193
   329     2001  3FFF               	dw	16383
   330                           
   331                           ;Config register IDLOC2 @ 0x2002
   332                           ;	unspecified, using default values
   333     2002                     	org	8194
   334     2002  3FFF               	dw	16383
   335                           
   336                           ;Config register IDLOC3 @ 0x2003
   337                           ;	unspecified, using default values
   338     2003                     	org	8195
   339     2003  3FFF               	dw	16383
   340                           
   341                           	psect	config
   342                           
   343                           ;Config register CONFIG @ 0x2007
   344                           ;	Oscillator Selection bits
   345                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   346                           ;	Watchdog Timer Enable bit
   347                           ;	WDTE = OFF, WDT disabled
   348                           ;	Power-Up Timer Enable bit
   349                           ;	PWRTE = OFF, PWRT disabled
   350                           ;	GP3/MCLR pin function select
   351                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   352                           ;	Brown-out Detect Enable bit
   353                           ;	BOREN = OFF, BOD disabled
   354                           ;	Code Protection bit
   355                           ;	CP = OFF, Program Memory code protection is disabled
   356                           ;	Data Code Protection bit
   357                           ;	CPD = OFF, Data memory code protection is disabled
   358     2007                     	org	8199
   359     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      3       3

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                            _InitPic
 ---------------------------------------------------------------------------------
 (1) _InitPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      3       3       4        4.8%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 12 02:25:40 2023

                     l29 03D2                       u17 03DB                       u27 03F4  
                    l641 03CA                      l643 03CC                      l651 03D4  
                    l645 03CE                      l653 03E2                      l647 03CF  
                    l639 03C8                      l655 03EE                      l649 03D3  
                    _WPU 0095                     _GPIO 0005                     _main 03D3  
                   btemp 005E                     start 0000          __end_of_InitPic 03D3  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  status 0003                    wtemp0 005E          __initialization 03FD  
           __end_of_main 03FD                   ??_main 0020                   _TRISIO 0085  
              ??_InitPic 0000  __end_of__initialization 03FD           __pcstackCOMMON 0000  
             __pmaintext 03D3                  _InitPic 03C8                  __ptext1 03C8  
   end_of_initialization 03FD      start_initialization 03FD                ___latbits 0000  
          __pcstackBANK0 0020                 ?_InitPic 0020                 _GPIObits 0005  
             _OPTION_REG 0081  
