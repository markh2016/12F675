%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$dist/default/production/test.X.production.o
cinit CODE 0 3FD 3FD 2 2 1
idloc IDLOC 5 2000 2000 4 2 1
text1 CODE 0 3C8 3C8 B 2 1
maintext CODE 0 3D3 3D3 2A 2 1
cstackBANK0 BANK0 1 20 20 3 1 1
config CONFIG 4 2007 2007 1 2 1
$/tmp/xcXepBfhJ.o
idloc IDLOC 5 2000 2000 4 2 1
end_init CODE 0 0 0 1 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 23-5D 1
BANK0 23-5D 1
CONST 1-3C7 2
ENTRY 1-3C7 2
CODE 1-3C7 2
SFR0 0-1F 1
SFR1 80-DD 1
EEDATA 2100-217F 2
STRCODE 1-3C7 2
STRING 1-3C7 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$dist/default/production/test.X.production.o
3FD cinit CODE >250:/tmp/xcXogNPbm.s
3FD cinit CODE >253:/tmp/xcXogNPbm.s
3FD cinit CODE >259:/tmp/xcXogNPbm.s
3FD cinit CODE >261:/tmp/xcXogNPbm.s
3FE cinit CODE >262:/tmp/xcXogNPbm.s
3C8 text1 CODE >50:/home/mark/MPLABXProjects/test.X/main.c
3C8 text1 CODE >53:/home/mark/MPLABXProjects/test.X/main.c
3CA text1 CODE >56:/home/mark/MPLABXProjects/test.X/main.c
3CC text1 CODE >60:/home/mark/MPLABXProjects/test.X/main.c
3CE text1 CODE >61:/home/mark/MPLABXProjects/test.X/main.c
3CF text1 CODE >62:/home/mark/MPLABXProjects/test.X/main.c
3D0 text1 CODE >63:/home/mark/MPLABXProjects/test.X/main.c
3D2 text1 CODE >68:/home/mark/MPLABXProjects/test.X/main.c
3D3 maintext CODE >27:/home/mark/MPLABXProjects/test.X/main.c
3D3 maintext CODE >31:/home/mark/MPLABXProjects/test.X/main.c
3D4 maintext CODE >38:/home/mark/MPLABXProjects/test.X/main.c
3E2 maintext CODE >44:/home/mark/MPLABXProjects/test.X/main.c
3EE maintext CODE >45:/home/mark/MPLABXProjects/test.X/main.c
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - dist/default/production/test.X.production.o
__Hspace_0 7FE 0 ABS 0 - -
__Hspace_1 7FE 0 ABS 0 - -
__Hspace_2 7FE 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 7FE 0 ABS 0 strings -
_GPIO 5 0 ABS 0 - dist/default/production/test.X.production.o
___sp 7FE 0 STACK 2 stack /tmp/xcXepBfhJ.o
_main 7A6 0 CODE 0 maintext dist/default/production/test.X.production.o
btemp 5E 0 ABS 0 - dist/default/production/test.X.production.o
start 0 0 CODE 0 init /tmp/xcXepBfhJ.o
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
intlevel1 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
intlevel2 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
intlevel3 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
intlevel4 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
intlevel5 0 0 ENTRY 0 functab /tmp/xcXepBfhJ.o
_InitPic 790 0 CODE 0 text1 dist/default/production/test.X.production.o
wtemp0 5E 0 ABS 0 - dist/default/production/test.X.production.o
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 7FE 0 ABS 0 clrtext -
__Lmaintext 7FE 0 ABS 0 maintext -
_OPTION_REG 81 0 ABS 0 - dist/default/production/test.X.production.o
___stackhi 0 0 ABS 0 - /tmp/xcXepBfhJ.o
___stacklo 0 0 ABS 0 - /tmp/xcXepBfhJ.o
start_initialization 7FA 0 CODE 0 cinit dist/default/production/test.X.production.o
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 dist/default/production/test.X.production.o
_TRISIO 85 0 ABS 0 - dist/default/production/test.X.production.o
___int_sp 7FE 0 STACK 2 stack /tmp/xcXepBfhJ.o
__Hbank0 7FE 0 ABS 0 bank0 -
__Hbank1 7FE 0 BANK1 1 bank1 -
__Hcinit 7FE 0 CODE 0 cinit -
__Hidloc 4008 0 IDLOC 5 idloc -
__Hstack 7FE 0 STACK 2 stack -
__Hmaintext 7FE 0 ABS 0 maintext -
__Hcommon 7FE 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 4 config -
_GPIObits 5 0 ABS 0 - dist/default/production/test.X.production.o
__Lbank0 7FE 0 ABS 0 bank0 -
__Lbank1 7FE 0 BANK1 1 bank1 -
__Lcinit 7FA 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 5 idloc -
__Lstack 7FE 0 STACK 2 stack -
__Habs1 7FE 0 ABS 0 abs1 -
__Hcode 7FE 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 7FE 0 ABS 0 sfr0 -
__Hsfr1 7FE 0 ABS 0 sfr1 -
__Htext 7FE 0 ABS 0 text -
__Labs1 7FE 0 ABS 0 abs1 -
__Lcode 7FE 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 7FE 0 ABS 0 sfr0 -
__Lsfr1 7FE 0 ABS 0 sfr1 -
__Ltext 7FE 0 ABS 0 text -
__LcstackBANK0 7FE 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 7FE 0 ABS 0 cstackCOMMON -
_WPU 95 0 ABS 0 - dist/default/production/test.X.production.o
__S0 3FF 0 ABS 0 - -
__S1 23 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Hosccal 7FE 0 CODE 0 osccal -
__Lintentry 0 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec /tmp/xcXepBfhJ.o
__pmaintext 7A6 0 CODE 0 maintext dist/default/production/test.X.production.o
__Lcommon 7FE 0 ABS 0 common -
__Lconfig 0 0 CONFIG 4 config -
___osccal_val 7FE 0 CODE 0 osccal /tmp/xcXepBfhJ.o
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__HcstackBANK0 7FE 0 ABS 0 cstackBANK0 -
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 7FE 0 ABS 0 cstackCOMMON -
end_of_initialization 7FA 0 CODE 0 cinit dist/default/production/test.X.production.o
__Hintentry 0 0 CODE 0 intentry -
__Losccal 7FE 0 CODE 0 osccal -
__Lstrings 7FE 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
__ptext1 790 0 CODE 0 text1 dist/default/production/test.X.production.o
__end_of_InitPic 7A6 0 CODE 0 text1 dist/default/production/test.X.production.o
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 7FA 0 CODE 0 cinit dist/default/production/test.X.production.o
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 7FE 0 ABS 0 clrtext -
__pcstackCOMMON 0 0 COMMON 1 cstackCOMMON dist/default/production/test.X.production.o
__Hend_init 2 0 CODE 0 end_init -
__end_of_main 7FA 0 CODE 0 maintext dist/default/production/test.X.production.o
_ANSEL 9F 0 ABS 0 - dist/default/production/test.X.production.o
_CMCON 19 0 ABS 0 - dist/default/production/test.X.production.o
__Hram 7FE 0 ABS 0 ram -
__Lram 7FE 0 ABS 0 ram -
__initialization 7FA 0 CODE 0 cinit dist/default/production/test.X.production.o
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 5E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 3FD 7FA 2 2
text1 0 3C8 790 B 2
maintext 0 3D3 7A6 2A 2
cstackBANK0 1 20 20 3 1
reset_vec 0 0 0 1 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
